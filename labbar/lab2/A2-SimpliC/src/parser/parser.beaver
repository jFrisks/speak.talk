%class "LangParser";
%package "lang.ast";

%embed {:
	static public class SyntaxError extends RuntimeException { public SyntaxError(String msg) {super(msg);}}
	// Disable syntax error recovery
	protected void recoverFromError(Symbol token, TokenStream in) {
		throw new SyntaxError("Cannot recover from the syntax error");
	}
:};

%terminals ID, INT, LPARAN, RPARAN, LBRACKET, RBRACKET;

%typeof program = "Program";
%typeof functionCallStmt = "FunctionCallStmt";
%typeof functionCallStmtList = "List";
%typeof block = "Block";


%goal program;

program = functionCallStmtList.list {: return new Program(list); :} ;

functionCallStmtList =
  functionCallStmt.a {: return new List().add(a); :}
  | functionCallStmtList.a functionCallStmt.b {: return new a.add(b); :}
  ;

functionCallStmt = INT ID LPARAN RPARAN block.b {: return new FunctionCallStmt(b); :} ;
block = LBRACKET RBRACKET {: return new Block(); :} ;